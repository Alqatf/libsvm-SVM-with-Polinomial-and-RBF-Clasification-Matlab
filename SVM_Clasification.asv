% Cargar la base de datos
clear; clc;
data=load('data.txt');

[sizeData,~] = size(data);
muestrasPositivas = 416;
muestrasNegativas = sizeData - muestrasPositivas;

% Dividir el número de muestras en negativos y positivos

dataPositivos=data(1:muestrasPositivas,1:10);
dataNegativos=data(muestrasPositivas + 1:end,1:10);

% Seleccionar la cantidad de datos para entrenamiento
numPTrain = 80;
numNTrain = 130;

% Obtener las matrices de entrenamiento, salidas deseadas y prueba
dataEntrenamiento=[dataPositivos(1:numPTrain,:);dataNegativos(1:numNTrain,:)];
dataDeseada=[ones(numPTrain,1);ones(numNTrain,1).*-1];
dataPrueba=[dataPositivos(numPTrain + 1:end,:);dataNegativos(numNTrain + 1:end,:)];

% Obtener el modelo de SVM utilizando RBF
SVMModel = fitcsvm(dataEntrenamiento,dataDeseada,'Standardize',true,...
        'KernelFunction','rbf');
[RBF_Etiquetas,RBF_Resultado] = predict(SVMModel,dataPrueba); 

% Seleccionar el número de positivos y negativos en el módelo SVM
[sizePrueba,~] = size(dataPrueba);
numPositivos = muestrasPositivas - numPTrain;
numNegativos = muestrasNegativas - numNTrain;

% Obtener el número de clasificaciones positivas del SVM
RBF_VP=0;
for cont=1:numPositivos
if (RBF_Etiquetas(cont,1)==1)
    RBF_VP=RBF_VP+1;
end
end

% Calcular la sensibilidad del SVM con RBF
RBF_R_Sensibilidad=(RBF_VP/numPositivos)*100;

%Obtener el número de clasificaciones negativas del SVM
RBF_VN=0;
for cont=numPositivos + 1:sizePrueba%%17
if (RBF_Etiquetas(cont,1)==-1)
    RBF_VN=RBF_VN+1;
end
end

%Calcular la especificidad del SVM con RBF
RBF_R_Especificidad=(RBF_VN/(sizePrueba-numPositivos))*100;

%Obtener el número de verdaderos positivos y negativos y de falsos
%positivos y negativos
RBF_VP;
RBF_FN=numPositivos-RBF_VP;
RBF_E_Positivos=RBF_VP+RBF_FN;
RBF_VN;
RBF_FP=(sizePrueba - numPositivos)-RBF_VN;
RBF_E_Negativos=RBF_VN+RBF_FP;

%Obtener el módelo de SVM con función Polinomial
SVMMode2 = fitcsvm(dataEntrenamiento,dataDeseada,'Standardize',true,...
        'KernelFunction','polynomial', 'PolynomialOrder' ,6,'BoxConstraint',1);
[POLY_Etiquetas,POLY_Resultado] = predict(SVMMode2,dataPrueba);


POLY_VP=0;
for cont=1:numPositivos
if (POLY_Etiquetas(cont,1)==1)
    POLY_VP=POLY_VP+1;
end
end
POLY_R_Sensibilidad=(POLY_VP/216)*100;
POLY_VN=0;
for cont=numPositivos + 1:sizePrueba%%17
if (POLY_Etiquetas(cont,1)==-1)
    POLY_VN=POLY_VN+1;
end
end
POLY_R_Especificidad=(POLY_VN/(sizePrueba - numPositivos))*100;

POLY_VP ;
POLY_FN=numPositivos-POLY_VP;
POLY_E_Positivos=POLY_VP+POLY_FN;
POLY_VN;
POLY_FP=(sizePrueba - numPositivos)-POLY_VN;
POLY_E_Negativos=POLY_VN+POLY_FP;
